pipeline {
    agent any 

    environment {
		AWS_DEFAULT_REGION="us-east-1"        
    }


    stages {
        stage('Say hello to Jenkins') {
            steps {
                echo 'Hello world!' 
            }
        }
        stage('TEST: validate packer') {
            steps {
                sh "/usr/local/bin/packer validate 1-simple/packer/packer.json"
            }
        }
        stage('BUILD: AWS create buckets') {
            steps {
                withAWS(credentials: 'f82c0baa-35ea-4a9e-b488-bf5308ecdddb', region: 'us-east-1') {
                    sh '''

                        for s3bucket in terraform-state private-keys inventories; do

                            aws s3api create-bucket --bucket "$s3bucket"-12345abcde --acl private 
                            aws s3api put-bucket-versioning --bucket "$s3bucket"-12345abcde --versioning-configuration Status=Enabled
                        
                        done
  
                    '''
                }
                
            }
        }
        stage('BUILD: build AMI with packer') {
            steps {
            	withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', 
			    accessKeyVariable: 'AWS_ACCESS_KEY_ID', 
			    credentialsId: 'f82c0baa-35ea-4a9e-b488-bf5308ecdddb', 
			    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) 
		{
                sh "/usr/local/bin/packer build -debug 1-simple/packer/packer.json"
            	}
            }
    	}

        stage('BUILD: deploy ec2 with terraform ') {
            

            steps {
                withCredentials([
                    string(credentialsId: '05b3aa87-4961-4a4f-8859-8047099629ed', 
                        variable: 'TF_VAR_my_public_ip'),
                    [$class: 'AmazonWebServicesCredentialsBinding', 
                        accessKeyVariable: 'AWS_ACCESS_KEY_ID', 
                        credentialsId: 'f82c0baa-35ea-4a9e-b488-bf5308ecdddb', 
                        secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) 

		            {       
                        sh '''
                            echo "will go to terraform dir"
                            cd 1-simple/terraform
                            echo "my working dir is $PWD"
                            /usr/local/bin/terraform init
                            /usr/local/bin/terraform plan
                            /usr/local/bin/terraform apply -auto-approve

                        '''
            	    }
                }
        }
/*
        stage('FINAL: public generated inventory') {
            steps {
                sh "git push origin HEAD:main"
            }
	    }
*/
     }

}
